# 世界书生成器 项目文档 (精简版)

本文档记录了项目的关键迭代和技术决策。

---

## v52.x - UI与用户体验优化

- **v52.8.0**: **修复全自动生成功能BUG**。
    - **问题**: 全自动生成流程在第一步“任务拆解”时，因AI返回数据不完整导致`Unexpected end of JSON input`错误。
    - **根源分析**:
        1.  **API调用路径硬编码**: `callApiWithCredits`函数被错误地修改为强制使用自定义API路径，导致在使用酒馆内置API时调用失败。
        2.  **关键参数丢失**: 在任务拆解的API请求中，移除了`max_tokens`参数，这与v37.0.0版本修复过的问题一致，是导致AI返回不完整JSON的直接原因。
    - **解决方案**:
        1.  将`callApiWithCredits`函数恢复为根据用户设置（酒馆或自定义）动态选择API路径的正确逻辑。
        2.  在任务拆解的API请求负载中，重新添加`max_tokens: 60000`参数，确保AI有足够容量生成完整的指令JSON。
- **v52.7.0**: **重构充值弹窗显示逻辑**。放弃了直接用JS修改内联样式的方式，改为通过添加/移除`.wbg-is-visible` CSS类来控制显示和隐藏，使代码更健壮、更易于维护。
- **v52.6.0**: **修复充值弹窗移动端显示BUG**。通过调整CSS，使其在小屏幕上采用顶部对齐（`flex-start`）而非居中对齐，解决了弹窗被遮挡的问题。
- **v52.5.0**: **彻底修复悬浮按钮（FAB）定位问题**。
    - **问题**: CSS的`transform`居中样式与JS的拖动定位逻辑冲突，且位置记忆功能被禁用。
    - **最终解决方案**: 移除了冲突的CSS居中样式，恢复其经典的右下角定位。同时，重新启用了`localStorage`位置记忆，并增加了`keepInBounds`边界检测，确保按钮在任何情况下都保持在屏幕可视范围内。
- **v52.2.0**: **修复主弹窗移动端UI BUG**。修正了移动端媒体查询中的CSS，确保主弹窗在所有设备上都能正确垂直居中。

---

## v38.0.0 - v51.0.0: 支付系统集成与史诗级调试

此阶段完成了从零到一的半自动支付系统，并解决了一系列复杂的生产环境问题。

- **v38.0.0**: **核心功能：集成二维码充值系统**。
    - **方案**: 鉴于个人开发者限制，设计并实现了一套“二维码+支付口令”的半自动支付方案。
    - **架构**: 采用前后端分离，前端（插件）负责展示UI和轮询，后端（Vercel无服务器函数）负责创建订单和更新状态。收款由开发者在支付宝后台查看备注后，通过一个简单的内部管理页面手动确认。

- **核心问题修复总结**:
    - **1. Vercel部署与路由 (v38.3.0, v41.0.0, v42.0.0)**:
        - **问题**: API出现CORS错误，后台管理页面`admin.html`出现404。
        - **最终方案**: 采用“单一入口架构”。`vercel.json`配置为将所有请求`/(.*)`无条件转发给`api/index.js`。由Express应用自身通过`express.static(path.join(__dirname, '../public'))`提供静态文件服务，并处理所有API路由，实现了逻辑的统一和稳定。
    - **2. 后端稳定性与数据存储 (v39.0.0, v43.0.0, v46.0.0, v48.0.0, v50.0.0)**:
        - **问题**: 服务器频繁因文件读写失败、数据解析错误、未捕获的异常而崩溃，返回“500 Internal Server Error”。
        - **最终方案**:
            - **数据库迁移 (v39.0.0)**: 将数据存储从不稳定的`db.json`文件，彻底迁移至高可用的**Vercel KV (基于Redis) 云数据库**，从根本上解决了服务器崩溃问题。
            - **健壮性重构**: 为所有API增加了`try...catch`块，将中间件逻辑内联，并增加了全局错误处理中间件，确保任何错误都能被优雅捕获并返回标准JSON。
    - **3. CORS策略 (v38.1.0, v45.0.0, v51.0.0)**:
        - **问题**: 浏览器因CORS策略阻止跨域请求。
        - **最终方案**: 移除了`vercel.json`中所有CORS相关的`headers`，在Express后端使用`cors`库，并配置了精确的来源白名单，完美解决了跨域问题。
    - **4. 调试工具 (v44.0.0, v47.0.0)**:
        - **方案**: 为前端的`fetch`请求增加了详细的日志功能，在捕获到错误时，首先打印服务器返回的**原始文本** (`response.text()`)。这对于识破服务器返回的是HTML错误页面而非预期的JSON至关重要。

---

## v20.0.0 - v37.0.0: 核心功能增强与健壮性提升

- **v37.0.0**: **修复AI回复截断问题**。将API调用中的参数从错误的`max_new_tokens`修正为正确的`max_tokens`，确保能接收到完整的JSON数据。
- **v36.0.0**: **引入“不死鸟”重试机制**。将自动重试增加到10次，并在失败后提供“手动重试”按钮，允许用户无限次地对失败步骤进行重试。
- **v35.0.0**: **增加全流程AI原始数据日志**。为所有AI调用环节增加了“上帝视角”调试功能，无论成功失败，都在UI上显示原始返回数据。
- **v30.0.0**: **最终修复UI自动刷新**。根据官方教程，通过直接调用SillyTavern的全局函数`window.getCharacters()`和`window.select_rm_info()`，实现了创建角色后稳定、可靠的UI刷新和高亮。
- **v22.1.1**: **修复角色卡创建API字段名**。将提交给后端的`first_message`字段修正为正确的`first_mes`，解决了“第一条消息”丢失的BUG。
- **v21.0.0**: **强制角色卡与世界书命名一致**。通过代码强制将生成的“导演”角色卡名称与世界书名称同步，并优化了相关提示词。
- **v20.0.0**: **功能闭环：集成角色卡自动生成与绑定**。新增了核心功能，在世界书创建完成后，能自动（或手动）为其生成一个配套的“导演”角色卡，并将两者绑定，形成完整的创作流程。

---

## v1.0.0 - v19.0.0: 奠基与核心功能迭代

此阶段完成了插件从0到1的构建，并逐步完善了核心功能。

- **健壮性与重试机制 (v15-v18)**: 引入并完善了自动化任务的容错与重试架构。
- **自动化流程增强 (v11-v14)**: 新增并完善了“全自动生成”模式，支持自定义API和后台运行。
- **代码重构与更新 (v8-v10)**: 对项目进行底层重构，实现了数据与逻辑分离，并建立了自动更新机制。
- **核心功能与提示词工程 (v1-v7)**: 实现了四阶段创作的核心功能，并根据用户反馈对提示词进行了多次革命性重构，奠定了高质量内容生成的基础。
- **项目启动 (v0.x)**: 搭建了项目基本框架，建立了“生成-审核-上传”的核心工作流。
